// Code generated by go-swagger; DO NOT EDIT.

package troubleshoot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/LochanRn/tiny-url-api/gen/models"
)

// V1PingReader is a Reader for the V1Ping structure.
type V1PingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1PingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1PingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewV1PingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV1PingOK creates a V1PingOK with default headers values
func NewV1PingOK() *V1PingOK {
	return &V1PingOK{}
}

/*
V1PingOK describes a response with status code 200, with default header values.

OK
*/
type V1PingOK struct {
	Payload *models.V1Ping
}

// IsSuccess returns true when this v1 ping o k response has a 2xx status code
func (o *V1PingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 ping o k response has a 3xx status code
func (o *V1PingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 ping o k response has a 4xx status code
func (o *V1PingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 ping o k response has a 5xx status code
func (o *V1PingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 ping o k response a status code equal to that given
func (o *V1PingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 ping o k response
func (o *V1PingOK) Code() int {
	return 200
}

func (o *V1PingOK) Error() string {
	return fmt.Sprintf("[GET /v1/ping][%d] v1PingOK  %+v", 200, o.Payload)
}

func (o *V1PingOK) String() string {
	return fmt.Sprintf("[GET /v1/ping][%d] v1PingOK  %+v", 200, o.Payload)
}

func (o *V1PingOK) GetPayload() *models.V1Ping {
	return o.Payload
}

func (o *V1PingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1Ping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1PingDefault creates a V1PingDefault with default headers values
func NewV1PingDefault(code int) *V1PingDefault {
	return &V1PingDefault{
		_statusCode: code,
	}
}

/*
V1PingDefault describes a response with status code -1, with default header values.

generic error response
*/
type V1PingDefault struct {
	_statusCode int

	Payload models.V1APIError
}

// IsSuccess returns true when this v1 ping default response has a 2xx status code
func (o *V1PingDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this v1 ping default response has a 3xx status code
func (o *V1PingDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this v1 ping default response has a 4xx status code
func (o *V1PingDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this v1 ping default response has a 5xx status code
func (o *V1PingDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this v1 ping default response a status code equal to that given
func (o *V1PingDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the v1 ping default response
func (o *V1PingDefault) Code() int {
	return o._statusCode
}

func (o *V1PingDefault) Error() string {
	return fmt.Sprintf("[GET /v1/ping][%d] V1Ping default  %+v", o._statusCode, o.Payload)
}

func (o *V1PingDefault) String() string {
	return fmt.Sprintf("[GET /v1/ping][%d] V1Ping default  %+v", o._statusCode, o.Payload)
}

func (o *V1PingDefault) GetPayload() models.V1APIError {
	return o.Payload
}

func (o *V1PingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
