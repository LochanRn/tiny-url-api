// Code generated by go-swagger; DO NOT EDIT.

package tinyurl

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/LochanRn/tiny-url-api/gen/models"
)

// V1TinyurlRedirectReader is a Reader for the V1TinyurlRedirect structure.
type V1TinyurlRedirectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1TinyurlRedirectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 302:
		result := NewV1TinyurlRedirectFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1TinyurlRedirectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV1TinyurlRedirectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV1TinyurlRedirectFound creates a V1TinyurlRedirectFound with default headers values
func NewV1TinyurlRedirectFound() *V1TinyurlRedirectFound {
	return &V1TinyurlRedirectFound{}
}

/*
V1TinyurlRedirectFound describes a response with status code 302, with default header values.

Redirect to the original URL
*/
type V1TinyurlRedirectFound struct {

	/* Original URL
	 */
	Location string
}

// IsSuccess returns true when this v1 tinyurl redirect found response has a 2xx status code
func (o *V1TinyurlRedirectFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 tinyurl redirect found response has a 3xx status code
func (o *V1TinyurlRedirectFound) IsRedirect() bool {
	return true
}

// IsClientError returns true when this v1 tinyurl redirect found response has a 4xx status code
func (o *V1TinyurlRedirectFound) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 tinyurl redirect found response has a 5xx status code
func (o *V1TinyurlRedirectFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 tinyurl redirect found response a status code equal to that given
func (o *V1TinyurlRedirectFound) IsCode(code int) bool {
	return code == 302
}

// Code gets the status code for the v1 tinyurl redirect found response
func (o *V1TinyurlRedirectFound) Code() int {
	return 302
}

func (o *V1TinyurlRedirectFound) Error() string {
	return fmt.Sprintf("[GET /v1/tinyurl/{tinyurl}][%d] v1TinyurlRedirectFound ", 302)
}

func (o *V1TinyurlRedirectFound) String() string {
	return fmt.Sprintf("[GET /v1/tinyurl/{tinyurl}][%d] v1TinyurlRedirectFound ", 302)
}

func (o *V1TinyurlRedirectFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	return nil
}

// NewV1TinyurlRedirectInternalServerError creates a V1TinyurlRedirectInternalServerError with default headers values
func NewV1TinyurlRedirectInternalServerError() *V1TinyurlRedirectInternalServerError {
	return &V1TinyurlRedirectInternalServerError{}
}

/*
V1TinyurlRedirectInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1TinyurlRedirectInternalServerError struct {
	Payload *models.V1InternalServerError
}

// IsSuccess returns true when this v1 tinyurl redirect internal server error response has a 2xx status code
func (o *V1TinyurlRedirectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 tinyurl redirect internal server error response has a 3xx status code
func (o *V1TinyurlRedirectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 tinyurl redirect internal server error response has a 4xx status code
func (o *V1TinyurlRedirectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 tinyurl redirect internal server error response has a 5xx status code
func (o *V1TinyurlRedirectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 tinyurl redirect internal server error response a status code equal to that given
func (o *V1TinyurlRedirectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 tinyurl redirect internal server error response
func (o *V1TinyurlRedirectInternalServerError) Code() int {
	return 500
}

func (o *V1TinyurlRedirectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/tinyurl/{tinyurl}][%d] v1TinyurlRedirectInternalServerError  %+v", 500, o.Payload)
}

func (o *V1TinyurlRedirectInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/tinyurl/{tinyurl}][%d] v1TinyurlRedirectInternalServerError  %+v", 500, o.Payload)
}

func (o *V1TinyurlRedirectInternalServerError) GetPayload() *models.V1InternalServerError {
	return o.Payload
}

func (o *V1TinyurlRedirectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1TinyurlRedirectDefault creates a V1TinyurlRedirectDefault with default headers values
func NewV1TinyurlRedirectDefault(code int) *V1TinyurlRedirectDefault {
	return &V1TinyurlRedirectDefault{
		_statusCode: code,
	}
}

/*
V1TinyurlRedirectDefault describes a response with status code -1, with default header values.

generic error response
*/
type V1TinyurlRedirectDefault struct {
	_statusCode int

	Payload *models.V1DomainsShorternedDefaultBody
}

// IsSuccess returns true when this v1 tinyurl redirect default response has a 2xx status code
func (o *V1TinyurlRedirectDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this v1 tinyurl redirect default response has a 3xx status code
func (o *V1TinyurlRedirectDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this v1 tinyurl redirect default response has a 4xx status code
func (o *V1TinyurlRedirectDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this v1 tinyurl redirect default response has a 5xx status code
func (o *V1TinyurlRedirectDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this v1 tinyurl redirect default response a status code equal to that given
func (o *V1TinyurlRedirectDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the v1 tinyurl redirect default response
func (o *V1TinyurlRedirectDefault) Code() int {
	return o._statusCode
}

func (o *V1TinyurlRedirectDefault) Error() string {
	return fmt.Sprintf("[GET /v1/tinyurl/{tinyurl}][%d] V1TinyurlRedirect default  %+v", o._statusCode, o.Payload)
}

func (o *V1TinyurlRedirectDefault) String() string {
	return fmt.Sprintf("[GET /v1/tinyurl/{tinyurl}][%d] V1TinyurlRedirect default  %+v", o._statusCode, o.Payload)
}

func (o *V1TinyurlRedirectDefault) GetPayload() *models.V1DomainsShorternedDefaultBody {
	return o.Payload
}

func (o *V1TinyurlRedirectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1DomainsShorternedDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
