// Code generated by go-swagger; DO NOT EDIT.

package tinyurl

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/LochanRn/tiny-url-api/gen/models"
)

// V1DomainsShorternedReader is a Reader for the V1DomainsShorterned structure.
type V1DomainsShorternedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1DomainsShorternedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1DomainsShorternedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewV1DomainsShorternedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV1DomainsShorternedDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV1DomainsShorternedOK creates a V1DomainsShorternedOK with default headers values
func NewV1DomainsShorternedOK() *V1DomainsShorternedOK {
	return &V1DomainsShorternedOK{}
}

/*
V1DomainsShorternedOK describes a response with status code 200, with default header values.

OK
*/
type V1DomainsShorternedOK struct {
	Payload *models.V1DomainsShorterned
}

// IsSuccess returns true when this v1 domains shorterned o k response has a 2xx status code
func (o *V1DomainsShorternedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 domains shorterned o k response has a 3xx status code
func (o *V1DomainsShorternedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 domains shorterned o k response has a 4xx status code
func (o *V1DomainsShorternedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 domains shorterned o k response has a 5xx status code
func (o *V1DomainsShorternedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 domains shorterned o k response a status code equal to that given
func (o *V1DomainsShorternedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 domains shorterned o k response
func (o *V1DomainsShorternedOK) Code() int {
	return 200
}

func (o *V1DomainsShorternedOK) Error() string {
	return fmt.Sprintf("[GET /v1/maxdomainsabbrev][%d] v1DomainsShorternedOK  %+v", 200, o.Payload)
}

func (o *V1DomainsShorternedOK) String() string {
	return fmt.Sprintf("[GET /v1/maxdomainsabbrev][%d] v1DomainsShorternedOK  %+v", 200, o.Payload)
}

func (o *V1DomainsShorternedOK) GetPayload() *models.V1DomainsShorterned {
	return o.Payload
}

func (o *V1DomainsShorternedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1DomainsShorterned)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DomainsShorternedInternalServerError creates a V1DomainsShorternedInternalServerError with default headers values
func NewV1DomainsShorternedInternalServerError() *V1DomainsShorternedInternalServerError {
	return &V1DomainsShorternedInternalServerError{}
}

/*
V1DomainsShorternedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1DomainsShorternedInternalServerError struct {
	Payload *models.V1InternalServerError
}

// IsSuccess returns true when this v1 domains shorterned internal server error response has a 2xx status code
func (o *V1DomainsShorternedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 domains shorterned internal server error response has a 3xx status code
func (o *V1DomainsShorternedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 domains shorterned internal server error response has a 4xx status code
func (o *V1DomainsShorternedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 domains shorterned internal server error response has a 5xx status code
func (o *V1DomainsShorternedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 domains shorterned internal server error response a status code equal to that given
func (o *V1DomainsShorternedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 domains shorterned internal server error response
func (o *V1DomainsShorternedInternalServerError) Code() int {
	return 500
}

func (o *V1DomainsShorternedInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/maxdomainsabbrev][%d] v1DomainsShorternedInternalServerError  %+v", 500, o.Payload)
}

func (o *V1DomainsShorternedInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/maxdomainsabbrev][%d] v1DomainsShorternedInternalServerError  %+v", 500, o.Payload)
}

func (o *V1DomainsShorternedInternalServerError) GetPayload() *models.V1InternalServerError {
	return o.Payload
}

func (o *V1DomainsShorternedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1DomainsShorternedDefault creates a V1DomainsShorternedDefault with default headers values
func NewV1DomainsShorternedDefault(code int) *V1DomainsShorternedDefault {
	return &V1DomainsShorternedDefault{
		_statusCode: code,
	}
}

/*
V1DomainsShorternedDefault describes a response with status code -1, with default header values.

generic error response
*/
type V1DomainsShorternedDefault struct {
	_statusCode int

	Payload *models.V1DomainsShorternedDefaultBody
}

// IsSuccess returns true when this v1 domains shorterned default response has a 2xx status code
func (o *V1DomainsShorternedDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this v1 domains shorterned default response has a 3xx status code
func (o *V1DomainsShorternedDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this v1 domains shorterned default response has a 4xx status code
func (o *V1DomainsShorternedDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this v1 domains shorterned default response has a 5xx status code
func (o *V1DomainsShorternedDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this v1 domains shorterned default response a status code equal to that given
func (o *V1DomainsShorternedDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the v1 domains shorterned default response
func (o *V1DomainsShorternedDefault) Code() int {
	return o._statusCode
}

func (o *V1DomainsShorternedDefault) Error() string {
	return fmt.Sprintf("[GET /v1/maxdomainsabbrev][%d] V1DomainsShorterned default  %+v", o._statusCode, o.Payload)
}

func (o *V1DomainsShorternedDefault) String() string {
	return fmt.Sprintf("[GET /v1/maxdomainsabbrev][%d] V1DomainsShorterned default  %+v", o._statusCode, o.Payload)
}

func (o *V1DomainsShorternedDefault) GetPayload() *models.V1DomainsShorternedDefaultBody {
	return o.Payload
}

func (o *V1DomainsShorternedDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1DomainsShorternedDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
